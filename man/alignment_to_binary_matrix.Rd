% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viral_pca.R
\name{alignment_to_binary_matrix}
\alias{alignment_to_binary_matrix}
\title{Convert Sequence Alignment to Binary Matrix for PCA}
\usage{
alignment_to_binary_matrix(
  alignment,
  exclude_gaps = TRUE,
  min_freq = 0,
  verbose = FALSE
)
}
\arguments{
\item{alignment}{An alignment object with the following components:
\describe{
  \item{seq}{A list of character strings representing sequences}
  \item{nam}{A character vector of sequence names}
}}

\item{exclude_gaps}{Logical. If TRUE, gaps ("-") are excluded from the binary encoding. Default is TRUE.}

\item{min_freq}{Numeric between 0 and 1. Minimum frequency for a variant to be included in the binary matrix.
Variants with frequency below this threshold will be excluded. Default is 0 (include all variants).}

\item{verbose}{Logical. If TRUE, progress messages are printed. Default is FALSE.}
}
\value{
A binary matrix where rows correspond to sequences and columns represent the presence
  or absence of specific amino acids or nucleotides at specific positions. Column names are
  formatted as "posX_Y" where X is the position and Y is the amino acid or nucleotide.
}
\description{
This function converts a sequence alignment object (as returned by \code{seqinr::read.alignment})
into a binary matrix suitable for principal component analysis (PCA). Each column in the
resulting matrix represents the presence (1) or absence (0) of a specific amino acid or
nucleotide at a specific position in the alignment.
}
\examples{
\dontrun{
# Read an alignment file
library(seqinr)
my_alignment <- read.alignment(file = "my_alignment.fasta", format = "fasta")

# Convert to binary matrix
bin_matrix <- alignment_to_binary_matrix(my_alignment)

# Perform PCA
pca_result <- prcomp(bin_matrix, scale = TRUE)

# Plot the first two principal components
plot(pca_result$x[,1], pca_result$x[,2],
     xlab = "PC1", ylab = "PC2",
     main = "PCA of sequence alignment")
}

}
